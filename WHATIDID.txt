

set virtual environment under  ~/.pyenv/versions/2.7.15/envs/GroupProject-env
	#activattion should be automatatic on local machine by pyenv-virtualenv 
	# if not:
	$ pyenv activate <name>
	$ pyenv deactivate

keeping track of dependencies

        #created requirements.txt file in the virtual environment folder 
        $ pip freeze > requirements.txt

        # lists to the text file the installed packages in the environment



use python2.7
pip install flask 

HelloFLask.py to try Flask:
	# .py file in the same directory
	$ export FLASK_APP=HelloFLask.py
	$ flask run 

	#localhost:5000 runs the code
	# ta daaa  

Changes don't take place 'live' 
need to stop and restart server: 
	$ ^C
	$ flask run 

 
if you  want to see live changes set debugger on: 

	$ export FLASK_DEBUG=1 
	$ flask run

	# is not recommended during development 



set directory tree for the app including: 

run.py
requirements.txt
config.py
INSTANCE
	config.py
KELLERMANAPP
	__init__.py
	model.py
	views.py
	TEMPLATES
	STATIC

	
Within CONFIG.PY:
###	If you’re using Flask-Bcrypt to hash user passwords,
###	you’ll need to specify the number of “rounds” that the algorithm
###	executes in hashing a password. The more rounds used to hash a password,
###	the longer it’ll take for an attacker to guess a password given the
###	hash. The number of rounds should increase over time as computing powe
###	r increases.



Within VIEWS.PY:

# This page is to set views of the future site 
# define all routes and their functions 

# so far: 
	- Home Page
	- Kinase search
	- Kinase result 
	- Upload 
	- Upload result 




SET GIT repository on local computer and learned basic git commands 
	$ git init      # in the folder that will be monitored 
	
	## see more in mostimportantcommandsforgit.txt 
ADD FILES to local git repository 


